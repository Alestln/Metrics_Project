services:
  metrics_project:
    image: metrics_api
    container_name: api
    build:
      context: .
      dockerfile: Metrics_Project/Dockerfile
    ports:
      - "8080:8080"
    #depends_on:
    #  - postgres
    networks:
      - my-network
  
  #postgres:
  #  image: postgres:17.4-alpine
  #  container_name: postgres
  #  environment:
  #    POSTGRES_USER: postgres
  #    POSTGRES_PASSWORD: 123456
  #  ports:
  #    - "5432:5432"
  #  volumes:
  #    - postgres_data:/var/lib/postgresql/data
  #  networks:
  #    - my-network
  
  #postgres_exporter:
   # image: prometheuscommunity/postgres-exporter
    #container_name: postgres-exporter
    #environment:
     # DATA_SOURCE_NAME: "postgresql://postgres:123456@postgres:5432/forum?sslmode=disable"
  
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    networks:
      - my-network
  
  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=123456
    depends_on:
      - prometheus
    networks:
      - my-network

networks:
  my-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local